[{"path":[]},{"path":"/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to gptstudio","title":"Contributing to gptstudio","text":"outlines propose change gptstudio. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to gptstudio","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to gptstudio","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to gptstudio","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"MichelNivard/gptstudio\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to gptstudio","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to gptstudio","text":"Please note gptstudio project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 GPTstudio authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with gptstudio","title":"Getting help with gptstudio","text":"Thanks using gptstudio! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with gptstudio","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with gptstudio","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with gptstudio","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michel Nivard. Author, maintainer. James Wade. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nivard M, Wade J (2023). gptstudio: gptstudio adds functionality based OpenAI's GPT family models directly Rstudio. https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/.","code":"@Manual{,   title = {gptstudio: gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio},   author = {Michel Nivard and James Wade},   year = {2023},   note = {https://github.com/MichelNivard/gptstudio, https://michelnivard.github.io/gptstudio/}, }"},{"path":"/index.html","id":"gptstudio-","dir":"","previous_headings":"","what":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"goal gptstudio R programmers easily incorporate use large language models (LLMs) project workflows. models appear step change use text knowledge work, carefully consider ethical implications using models. Ethics LLMs (also called Foundation Models) area active discussion. addins, tailored R developers, also see sister package: gpttools","code":""},{"path":"/index.html","id":"install-the-addins-from-this-package","dir":"","previous_headings":"","what":"Install the addins from this package:","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"","code":"require(devtools) install_github(\"MichelNivard/gptstudio\")"},{"path":"/index.html","id":"privacy-notice","dir":"","previous_headings":"","what":"Privacy Notice","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"functions work taking text code highlighted/selected cursor, prompt use one built-apps, send OpenAI part prompt; fall privacy notice/rules/exceptions agreed OpenAI making account. can’t tell guarantee secure prompts sent OpenAI. don’t know OpenAI prompts, OpenAI clear use prompts results improve model (see terms use) unless opt-explicitly contacting . code designed share highlighted/selected text, prompt build help one apps elements R environment. Make sure aware send OpenAI accidentally share sensitive data OpenAI. HIGHLIGHT, INCLUDE PROMPT, THEREFORE UPLOAD, DATA/CODE/TEXT REMAIN PRIVATE","code":""},{"path":"/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Make OpenAI account. now, free one . Create OpenAI API key use openai package within Rstudio Set API key Rstudio one two ways: default, functions openai look OPENAI_API_KEY environment variable. want set global environment variable, can use following command, \"<APIKEY>\" replaced actual key: Alternatively, can set key .Renviron file. Otherwise, can add key .Renviron file project. following commands open .Renviron editing: can add following line file (, replace \"<APIKEY>\" actual key): now set API key every time start particular project. Note: using GitHub/Gitlab, forget add .Renviron .gitignore!","code":"Sys.setenv(OPENAI_API_KEY = \"<APIKEY>\") require(usethis) edit_r_environ(scope = \"project\") OPENAI_API_KEY= \"<APIKEY>\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"examples use.","code":""},{"path":"/index.html","id":"chat-with-gpt-in-quarto","dir":"","previous_headings":"Usage","what":"Chat with GPT in Quarto","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Start GPT Chat Type question. **Addins > GPTSTUDIO > GPT Chat","code":""},{"path":"/index.html","id":"spelling-ang-grammar-check","dir":"","previous_headings":"Usage","what":"Spelling ang grammar check","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Spelling Grammar: Takes selected text sends OpenAI’s best model instructs return spelling grammar checked version. spelling","code":""},{"path":"/index.html","id":"active-voice","dir":"","previous_headings":"Usage","what":"Active voice","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Change text active voice: Takes selected text, sends OpenAI’s best model instructs return text active voice. active_voice","code":""},{"path":"/index.html","id":"writecode-from-prompt","dir":"","previous_headings":"Usage > Active voice","what":"Write/code from prompt","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Write/Code prompt: Takes selected text sends OpenAI prompt model work . like ChatGPT experience. Text prompt: prompt_text Code prompt: prompt_code","code":""},{"path":"/index.html","id":"comment-your-code","dir":"","previous_headings":"Usage","what":"Comment your code:","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Comment code: Takes selected text sends OpenAI prompt code specific model work , asks version comment added explaining code line line. add comments code","code":""},{"path":"/index.html","id":"provide-your-own-instructions","dir":"","previous_headings":"Usage","what":"Provide your own instructions","title":"gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio","text":"Addins > GPTSTUDIO > Freeform GPT editor: Apply edit desire can dream selection code text. freeform","code":""},{"path":"/reference/avAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — avAddin","title":"active voice Addin — avAddin","text":"Call function Rstudio addin ask GPT change selected text active voice","code":""},{"path":"/reference/avAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — avAddin","text":"","code":"avAddin()"},{"path":"/reference/chat_gpt_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Chat GPT\nRun the Chat GPT Shiny App — chat_gpt_addin","title":"Run Chat GPT\nRun the Chat GPT Shiny App — chat_gpt_addin","text":"Run Chat GPT Run Chat GPT Shiny App","code":""},{"path":"/reference/chat_gpt_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Chat GPT\nRun the Chat GPT Shiny App — chat_gpt_addin","text":"","code":"chat_gpt_addin()"},{"path":"/reference/check_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API setup — check_api","title":"Check API setup — check_api","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid. function re-check API already validated current session.","code":""},{"path":"/reference/check_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API setup — check_api","text":"","code":"check_api()"},{"path":"/reference/check_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API setup — check_api","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborts.","code":""},{"path":"/reference/check_api_connection.html","id":null,"dir":"Reference","previous_headings":"","what":"Check connection to OpenAI's API works — check_api_connection","title":"Check connection to OpenAI's API works — check_api_connection","text":"function checks whether API key provided OPENAI_API_KEY environment variable valid.","code":""},{"path":"/reference/check_api_connection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check connection to OpenAI's API works — check_api_connection","text":"","code":"check_api_connection(api_key)"},{"path":"/reference/check_api_connection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check connection to OpenAI's API works — check_api_connection","text":"api_key API key.","code":""},{"path":"/reference/check_api_connection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check connection to OpenAI's API works — check_api_connection","text":"Nothing returned. API key valid, success message printed. API key invalid, error message printed function aborted.","code":""},{"path":"/reference/check_api_key.html","id":null,"dir":"Reference","previous_headings":"","what":"Check API key — check_api_key","title":"Check API key — check_api_key","text":"function checks whether API key provided argument correct format.","code":""},{"path":"/reference/check_api_key.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check API key — check_api_key","text":"","code":"check_api_key(api_key)"},{"path":"/reference/check_api_key.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check API key — check_api_key","text":"api_key API key.","code":""},{"path":"/reference/check_api_key.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check API key — check_api_key","text":"Nothing returned. API key correct format, success message printed. API key correct format, error message printed function aborts.","code":""},{"path":"/reference/collect_dataframes.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect Dataframes — collect_dataframes","title":"Collect Dataframes — collect_dataframes","text":"Collect dataframes global environment.","code":""},{"path":"/reference/collect_dataframes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect Dataframes — collect_dataframes","text":"","code":"collect_dataframes()"},{"path":"/reference/collect_dataframes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect Dataframes — collect_dataframes","text":"character vector dataframe names.","code":""},{"path":"/reference/comAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"active voice Addin — comAddin","title":"active voice Addin — comAddin","text":"Call function Rstudio addin ask GPT add comments code","code":""},{"path":"/reference/comAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"active voice Addin — comAddin","text":"","code":"comAddin()"},{"path":"/reference/create_gpt_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a GPT Q&A File — create_gpt_chat","title":"Create a GPT Q&A File — create_gpt_chat","text":"function creates GPT Q&file use OpenAI's GPT models.","code":""},{"path":"/reference/create_gpt_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a GPT Q&A File — create_gpt_chat","text":"","code":"create_gpt_chat()"},{"path":"/reference/get_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around selectionGet to help with testthat — get_selection","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"Wrapper around selectionGet help testthat","code":""},{"path":"/reference/get_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"","code":"get_selection()"},{"path":"/reference/get_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrapper around selectionGet to help with testthat — get_selection","text":"Text selection via rstudioapi::selectionGet","code":""},{"path":"/reference/gpt_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Freeform GPT editor — gpt_addin","title":"Freeform GPT editor — gpt_addin","text":"Call function RStudio addin open GPT shiny app.","code":""},{"path":"/reference/gpt_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Freeform GPT editor — gpt_addin","text":"","code":"gpt_addin()"},{"path":"/reference/gpt_create.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_create","title":"Use GPT to improve text — gpt_create","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_create.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_create","text":"","code":"gpt_create(   model,   temperature,   max_tokens = getOption(\"gptstudio.max_tokens\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   append_text = TRUE )"},{"path":"/reference/gpt_create.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_create","text":"model name GPT model use. temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 openai_api_key API key OpenAI API. append_text Add text selection rather replace, default TRUE","code":""},{"path":"/reference/gpt_create.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_create","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"/reference/gpt_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_edit","title":"Use GPT to improve text — gpt_edit","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_edit","text":"","code":"gpt_edit(   model,   instruction,   temperature,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   append_text = FALSE )"},{"path":"/reference/gpt_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_edit","text":"model name GPT model use. instruction Instruction given model improve text. temperature parameter controlling randomness GPT model's output. openai_api_key API key OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"/reference/gpt_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_edit","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"/reference/gpt_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Use GPT to improve text — gpt_insert","title":"Use GPT to improve text — gpt_insert","text":"function uses GPT model OpenAI improve spelling grammar selected text current RStudio session.","code":""},{"path":"/reference/gpt_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use GPT to improve text — gpt_insert","text":"","code":"gpt_insert(   model,   prompt,   temperature = 0.1,   max_tokens = getOption(\"gptstudio.max_tokens\"),   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\"),   append_text = FALSE )"},{"path":"/reference/gpt_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use GPT to improve text — gpt_insert","text":"model name GPT model use. prompt Instructions insertion temperature parameter controlling randomness GPT model's output. max_tokens Maximum number tokens return (related length response), defaults 500 openai_api_key API key OpenAI API. append_text Add text selection rather replace, defaults FALSE","code":""},{"path":"/reference/gpt_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use GPT to improve text — gpt_insert","text":"Nothing returned. improved text inserted current RStudio session.","code":""},{"path":"/reference/gptstudio-package.html","id":null,"dir":"Reference","previous_headings":"","what":"gptstudio: gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio — gptstudio-package","title":"gptstudio: gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio — gptstudio-package","text":"OpenAI offers number large language models (LLMs) accessible via API. package lowers barrier using API inside RStudio IDE.","code":""},{"path":[]},{"path":"/reference/gptstudio-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gptstudio: gptstudio adds functionality based on OpenAI's GPT family of models directly into Rstudio — gptstudio-package","text":"Maintainer: Michel Nivard m.g.nivard@vu.nl Authors: James Wade github@jameshwade.com (ORCID)","code":""},{"path":"/reference/insert_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrapper around selectionGet to help with testthat — insert_text","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"Wrapper around selectionGet help testthat","code":""},{"path":"/reference/insert_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"","code":"insert_text(improved_text)"},{"path":"/reference/insert_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrapper around selectionGet to help with testthat — insert_text","text":"improved_text Text model queries inert script document","code":""},{"path":"/reference/openai_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate an answer to a question using OpenAI — openai_chat","title":"Generate an answer to a question using OpenAI — openai_chat","text":"Generate answer question using OpenAI","code":""},{"path":"/reference/openai_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate an answer to a question using OpenAI — openai_chat","text":"","code":"openai_chat(   model = \"text-davinci-003\",   max_tokens = getOption(\"gptstudio.max_tokens\"),   temperature = 0.5,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"/reference/openai_chat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate an answer to a question using OpenAI — openai_chat","text":"model string representing name OpenAI model use generating answer. Default \"text-davinci-003\". max_tokens integer representing maximum number tokens generate answer. Default getOption(\"gptstudio.max_tokens\"). temperature numeric value 0 1 representing sampling temperature OpenAI model. Default 0.5. openai_api_key string representing OpenAI API key use making API calls. Default value environment variable \"OPENAI_API_KEY\".","code":""},{"path":"/reference/openai_create_completion.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate text completions using OpenAI's API — openai_create_completion","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"Generate text completions using OpenAI's API","code":""},{"path":"/reference/openai_create_completion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"","code":"openai_create_completion(   model,   prompt = \"<|endoftext|>\",   suffix = NULL,   max_tokens = 16,   temperature = NULL,   top_p = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"/reference/openai_create_completion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"model model use generating text prompt prompt generating completions suffix suffix generating completions. NULL, suffix used. max_tokens maximum number tokens generate. temperature temperature use generating text (0 1). NULL, default temperature used. recommended specify temperature top_p time. top_p top-p value use generating text (0 1). NULL, default top-p value used. recommended specify temperature top_p time. openai_api_key API key accessing OpenAI's API. default, function try use OPENAI_API_KEY environment variable.","code":""},{"path":"/reference/openai_create_completion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"list generated completions information returned API.","code":""},{"path":"/reference/openai_create_completion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate text completions using OpenAI's API — openai_create_completion","text":"","code":"if (FALSE) { openai_create_completion(   model = \"text-davinci-002\",   prompt = \"Hello world!\" ) }"},{"path":"/reference/openai_create_edit.html","id":null,"dir":"Reference","previous_headings":"","what":"Create and edit text using OpenAI's API — openai_create_edit","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"Create edit text using OpenAI's API","code":""},{"path":"/reference/openai_create_edit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"","code":"openai_create_edit(   model,   input = \"\\\"\",   instruction,   temperature = NULL,   top_p = NULL,   openai_api_key = Sys.getenv(\"OPENAI_API_KEY\") )"},{"path":"/reference/openai_create_edit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"model model use generating text input input text edit instruction instruction editing text temperature temperature use generating text (0 1). NULL, default temperature used. recommended specify temperature top_p time. top_p top-p value use generating text (0 1). NULL, default top-p value used. recommended specify temperature top_p time. openai_api_key API key accessing OpenAI's API. default, function try use OPENAI_API_KEY environment variable.","code":""},{"path":"/reference/openai_create_edit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"list edited text information returned API.","code":""},{"path":"/reference/openai_create_edit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create and edit text using OpenAI's API — openai_create_edit","text":"","code":"if (FALSE) { openai_create_edit(   model = \"text-davinci-002\",   input = \"Hello world!\",   instruction = \"Capitalize the first letter of each sentence.\" ) }"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"/reference/prep_data_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Preps OpenAI model prompt for data documentation — prep_data_prompt","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"Prepares data prompt summarizing data printing ","code":""},{"path":"/reference/prep_data_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(data, method, prompt)"},{"path":"/reference/prep_data_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"data data.frame method summarization method, one \"skimr\", \"glimpse\", \"summary\" prompt prompt string","code":""},{"path":"/reference/prep_data_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"string","code":""},{"path":"/reference/prep_data_prompt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preps OpenAI model prompt for data documentation — prep_data_prompt","text":"","code":"prep_data_prompt(   data = mtcars,   method = \"skimr\",   prompt = \"This is a test prompt.\" ) #> [1] \"── Data Summary ────────────────────────\\n                           Values\\nName                       data  \\nNumber of rows             32    \\nNumber of columns          11    \\n_______________________          \\nColumn type frequency:           \\n  numeric                  11    \\n________________________         \\nGroup variables            None  \\n\\n── Variable type: numeric ──────────────────────────────────────────────────────\\n   skim_variable n_missing complete_rate    mean      sd    p0    p25    p50\\n\\033[38;5;250m 1\\033[39m mpg                   0             1  20.1     6.03  10.4   15.4   19.2 \\n\\033[38;5;250m 2\\033[39m cyl                   0             1   6.19    1.79   4      4      6   \\n\\033[38;5;250m 3\\033[39m disp                  0             1 231.    124.    71.1  121.   196.  \\n\\033[38;5;250m 4\\033[39m hp                    0             1 147.     68.6   52     96.5  123   \\n\\033[38;5;250m 5\\033[39m drat                  0             1   3.60    0.535  2.76   3.08   3.70\\n\\033[38;5;250m 6\\033[39m wt                    0             1   3.22    0.978  1.51   2.58   3.32\\n\\033[38;5;250m 7\\033[39m qsec                  0             1  17.8     1.79  14.5   16.9   17.7 \\n\\033[38;5;250m 8\\033[39m vs                    0             1   0.438   0.504  0      0      0   \\n\\033[38;5;250m 9\\033[39m am                    0             1   0.406   0.499  0      0      0   \\n\\033[38;5;250m10\\033[39m gear                  0             1   3.69    0.738  3      3      4   \\n\\033[38;5;250m11\\033[39m carb                  0             1   2.81    1.62   1      2      2   \\n      p75   p100\\n\\033[38;5;250m 1\\033[39m  22.8   33.9 \\n\\033[38;5;250m 2\\033[39m   8      8   \\n\\033[38;5;250m 3\\033[39m 326    472   \\n\\033[38;5;250m 4\\033[39m 180    335   \\n\\033[38;5;250m 5\\033[39m   3.92   4.93\\n\\033[38;5;250m 6\\033[39m   3.61   5.42\\n\\033[38;5;250m 7\\033[39m  18.9   22.9 \\n\\033[38;5;250m 8\\033[39m   1      1   \\n\\033[38;5;250m 9\\033[39m   1      1   \\n\\033[38;5;250m10\\033[39m   4      5   \\n\\033[38;5;250m11\\033[39m   4      8   \\nThis is a test prompt.\""},{"path":"/reference/run_gpt_freeform.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny app that supports GPT freeform addin — run_gpt_freeform","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"Shiny app supports GPT freeform addin","code":""},{"path":"/reference/run_gpt_freeform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"","code":"run_gpt_freeform()"},{"path":"/reference/run_gpt_freeform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny app that supports GPT freeform addin — run_gpt_freeform","text":"Nothing returned, shiny app run","code":""},{"path":"/reference/run_specify_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a Shiny App to Specify a Model with GPT — run_specify_model","title":"Run a Shiny App to Specify a Model with GPT — run_specify_model","text":"Run Shiny App Specify Model GPT","code":""},{"path":"/reference/run_specify_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a Shiny App to Specify a Model with GPT — run_specify_model","text":"","code":"run_specify_model()"},{"path":"/reference/sandgAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"spelling and grammar Addin — sandgAddin","title":"spelling and grammar Addin — sandgAddin","text":"Call function Rstudio addin ask GPT improve spelling grammar selected text.","code":""},{"path":"/reference/sandgAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"spelling and grammar Addin — sandgAddin","text":"","code":"sandgAddin()"},{"path":"/reference/setup_gpt_chat.html","id":null,"dir":"Reference","previous_headings":"","what":"Setup File for GPT Chat — setup_gpt_chat","title":"Setup File for GPT Chat — setup_gpt_chat","text":"Setup File GPT Chat","code":""},{"path":"/reference/setup_gpt_chat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Setup File for GPT Chat — setup_gpt_chat","text":"","code":"setup_gpt_chat(path = \"gpt_q_and_a.qmd\")"},{"path":"/reference/setup_gpt_chat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Setup File for GPT Chat — setup_gpt_chat","text":"path path file created. Defaults \"gpt_q_and_a.qmd\"","code":""},{"path":"/reference/specify_model_addin.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify Model Addin — specify_model_addin","title":"Specify Model Addin — specify_model_addin","text":"function launches GPT Specify Model Addin.","code":""},{"path":"/reference/specify_model_addin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify Model Addin — specify_model_addin","text":"","code":"specify_model_addin()"},{"path":"/reference/summarize_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize data — summarize_data","title":"Summarize data — summarize_data","text":"Summarize data frame using one three methods.","code":""},{"path":"/reference/summarize_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize data — summarize_data","text":"","code":"summarize_data(   data,   method = c(\"skimr\", \"skimr_lite\", \"column_types\", \"summary\") )"},{"path":"/reference/summarize_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize data — summarize_data","text":"data data frame method character vector specifying method use summarizing data. Must one \"skimr\", \"skimr_lite\", \"column_types\", \"summary\". Default \"skimr\".","code":""},{"path":"/reference/summarize_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize data — summarize_data","text":"Summarized data according specified method","code":""},{"path":"/reference/wpAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"write/code from prompt Addin — wpAddin","title":"write/code from prompt Addin — wpAddin","text":"Call function Rstudio addin ask GPT write text code descriptive prompt","code":""},{"path":"/reference/wpAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"write/code from prompt Addin — wpAddin","text":"","code":"wpAddin()"}]
